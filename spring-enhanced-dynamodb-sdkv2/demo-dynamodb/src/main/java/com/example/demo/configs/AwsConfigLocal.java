package com.example.demo.configs;

import com.example.demo.configs.properties.DynamoProperties;
import com.example.demo.extension.impl.AutoGeneratedPartitionKeyExtension;
import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
import org.springframework.boot.context.properties.EnableConfigurationProperties;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import software.amazon.awssdk.auth.credentials.AwsBasicCredentials;
import software.amazon.awssdk.auth.credentials.StaticCredentialsProvider;
import software.amazon.awssdk.enhanced.dynamodb.DynamoDbEnhancedClient;
import software.amazon.awssdk.enhanced.dynamodb.DynamoDbEnhancedClientExtension;
import software.amazon.awssdk.enhanced.dynamodb.extensions.AutoGeneratedTimestampRecordExtension;
import software.amazon.awssdk.regions.Region;
import software.amazon.awssdk.services.dynamodb.DynamoDbClient;

import java.net.URI;
import java.util.List;

@Configuration
@EnableConfigurationProperties(DynamoProperties.class)
public class AwsConfigLocal {
    private static final StaticCredentialsProvider STATIC_CREDENTIALS = StaticCredentialsProvider.create(AwsBasicCredentials.create("none", "none"));

    private final DynamoProperties properties;

    public AwsConfigLocal(DynamoProperties properties) {
        this.properties = properties;
    }

    @Bean
    @ConditionalOnMissingBean(DynamoDbClient.class)
    public DynamoDbClient dynamoDbClient() {
        return DynamoDbClient.builder()
                .credentialsProvider(STATIC_CREDENTIALS)
                .endpointOverride(URI.create(properties.getEndpoint()))
                .region(Region.of(properties.getRegion()))
                .build();
    }

    @Bean
    @ConditionalOnMissingBean(DynamoDbEnhancedClient.class)
    public DynamoDbEnhancedClient dynamoDbEnhancedClient(DynamoDbClient client) {
        List<DynamoDbEnhancedClientExtension> extensions = List.of(AutoGeneratedPartitionKeyExtension.create(), AutoGeneratedPartitionKeyExtension.create(), AutoGeneratedTimestampRecordExtension.create());
        return DynamoDbEnhancedClient.builder()
                .dynamoDbClient(client)
                .extensions(extensions)
                .build();
    }
}

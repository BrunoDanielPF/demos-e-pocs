package com.example.demo.extension.impl;

import software.amazon.awssdk.enhanced.dynamodb.*;
import software.amazon.awssdk.enhanced.dynamodb.extensions.WriteModification;
import software.amazon.awssdk.enhanced.dynamodb.mapper.StaticAttributeTag;
import software.amazon.awssdk.enhanced.dynamodb.mapper.StaticTableMetadata;
import software.amazon.awssdk.services.dynamodb.model.AttributeValue;
import software.amazon.awssdk.utils.Validate;

import java.util.*;
import java.util.function.Consumer;

public class AutoGeneratedPartitionKeyExtension implements DynamoDbEnhancedClientExtension {

    private static final String CUSTOM_METADATA_KEY = "AutoGeneratedPartitionKeyExtension:AutoGeneratedPartitionAttribute";
    private static final AutoGeneratedPartitionAttribute
            AUTO_GENERATED_PARTITION_ATTRIBUTE = new AutoGeneratedPartitionAttribute();

    @Override
    public WriteModification beforeWrite(DynamoDbExtensionContext.BeforeWrite context) {
        Collection<String> customMetadataObject = context.tableMetadata()
                .customMetadataObject(CUSTOM_METADATA_KEY, Collection.class).orElse(null);

        if (customMetadataObject == null) {
            return WriteModification.builder().build();
        }
        Map<String, AttributeValue> itemToTransform = new HashMap<>(context.items());
        customMetadataObject.forEach(
                key -> insertPartitionInItemToTransform(itemToTransform, key,
                        context.tableSchema().converterForAttribute(key)));
        return WriteModification.builder()
                .transformedItem(Collections.unmodifiableMap(itemToTransform))
                .build();
    }

    public static AutoGeneratedPartitionKeyExtension create() {
        return new AutoGeneratedPartitionKeyExtension();
    }

    private void insertPartitionInItemToTransform(Map<String, AttributeValue> itemToTransform,
                                                  String key,
                                                  AttributeConverter converter) {
        itemToTransform.put(key, converter.transformFrom(UUID.randomUUID().toString()));
    }

    public static final class AttributeTags {

        private AttributeTags() {
        }

        public static StaticAttributeTag autoGeneratedPartitionAttribute() {
            return AUTO_GENERATED_PARTITION_ATTRIBUTE;
        }
    }

    private static class AutoGeneratedPartitionAttribute implements StaticAttributeTag {


        @Override
        public <R> void validateType(String attributeName, EnhancedType<R> type,
                                     AttributeValueType attributeValueType) {

            Validate.notNull(type, "type é null");
            Validate.notNull(type.rawClass(), "rawClass é null");
            Validate.notNull(attributeValueType, "attributeValueType é null");
        }

        @Override
        public Consumer<StaticTableMetadata.Builder> modifyMetadata(String attributeName,
                                                                    AttributeValueType attributeValueType) {
            return metadata -> metadata.addCustomMetadataObject(CUSTOM_METADATA_KEY, Collections.singleton(attributeName))
                    .markAttributeAsKey(attributeName, attributeValueType);
        }
    }
}
